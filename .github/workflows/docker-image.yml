name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build_and_push:

    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“™ Extract Latest Tag from PhantomBotDE
        uses: oprypin/find-latest-tag@v1.0.2
        with:
          repository: PhantomBotDE/PhantomBotDE
          releases-only: true
        id: phantombotde

      - run: echo "PhantomBotDE is at version ${{ steps.phantombotde.outputs.tag }}"

      - run: echo "::set-output name=tag::$(echo ${{ steps.phantombotde.outputs.tag }} | sed -e "s/v//gI")"
        id: newtag

      - run: echo "Extracted Tag => ${{ steps.newtag.outputs.tag }}"

      - name: ðŸ’¡ Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: ðŸ’¡ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v2

      - name: ðŸ”“ Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: echo "Build Docker Container ${{ secrets.DOCKERHUB_USERNAME }}/phantombotde:${{ steps.phantombotde.outputs.tag }}"

      - name: ðŸ”¨ Build and push with version tag
        id: docker_build_tag
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: PV=${{ steps.newtag.outputs.tag }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/phantombotde:${{ steps.phantombotde.outputs.tag }}

      - run: echo "Build Docker Container ${{ secrets.DOCKERHUB_USERNAME }}/phantombotde:latest"

      - name: ðŸ”¨ Build and push with version tag
        id: docker_build_latest
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: PV=${{ steps.newtag.outputs.tag }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/phantombotde:latest
